import {callService, shadowState, Climate, ClimateProperties, HVAC_MODE, PRESET_MODE, FAN_MODE, SWING_MODE} from "@herja/core"
export type ClimateIDs = "bedroom_ac" | "office_ac" | "secondary_room_ac" | "nibe_133481_s1_room" | "nibe_133481_s1_supply" | "storeroom_ac"
export type ClimateEntities = Record<ClimateIDs, Climate>

export const climate: Climate<ClimateIDs> = {

['bedroom_ac']: {
  entity_id: "climate.bedroom_ac",
get entity() { return {state: shadowState["climate.bedroom_ac"].state, attributes: shadowState["climate.bedroom_ac"].attributes} as ClimateProperties},
turnOn() { return callService("climate", "set_hvac_mode", {hvac_mode: HVAC_MODE.ON}, {entity_id: "climate.bedroom_ac"})},
turnOff() { return callService("climate", "set_hvac_mode", {hvac_mode: HVAC_MODE.OFF}, {entity_id: "climate.bedroom_ac"})},
setHeating() { return callService("climate", "set_hvac_mode", {hvac_mode: HVAC_MODE.HEAT}, {entity_id: "climate.bedroom_ac"})},
setCooling() { return callService("climate", "set_hvac_mode", {hvac_mode: HVAC_MODE.COOL}, {entity_id: "climate.bedroom_ac"})},
setHeatCool() { return callService("climate", "set_hvac_mode", {hvac_mode: HVAC_MODE.HEAT_COOL}, {entity_id: "climate.bedroom_ac"})},
setAuto () { return callService("climate", "set_hvac_mode", {hvac_mode: HVAC_MODE.AUTO}, {entity_id: "climate.bedroom_ac"})},
setDry () { return callService("climate", "set_hvac_mode", {hvac_mode:  HVAC_MODE.DRY}, {entity_id: "climate.bedroom_ac"})},
setFanOnly() { return callService("climate", "set_hvac_mode", {hvac_mode: HVAC_MODE.FAN_ONLY}, {entity_id: "climate.bedroom_ac"})},
setEco () { return callService("climate", "set_preset_mode", {preset_mode: PRESET_MODE.ECO}, {entity_id: "climate.bedroom_ac"})},
setAway () { return callService("climate", "set_preset_mode", {preset_mode: PRESET_MODE.AWAY}, {entity_id: "climate.bedroom_ac"})},
setBoost () { return callService("climate", "set_preset_mode", {preset_mode: PRESET_MODE.BOOST}, {entity_id: "climate.bedroom_ac"})},
setComfort() { return callService("climate", "set_preset_mode", {preset_mode: PRESET_MODE.COMFORT}, {entity_id: "climate.bedroom_ac"})},
setHome () { return callService("climate", "set_preset_mode", {preset_mode: PRESET_MODE.HOME}, {entity_id: "climate.bedroom_ac"})},
setSleep () { return callService("climate", "set_preset_mode", {preset_mode: PRESET_MODE.SLEEP}, {entity_id: "climate.bedroom_ac"})},
setActivity() { return callService("climate", "set_preset_mode", {preset_mode: PRESET_MODE.ACTIVITY}, {entity_id: "climate.bedroom_ac"})},
setFanOn () { return callService("climate", "set_fan_mode", {fan_mode: FAN_MODE.ON}, {entity_id: "climate.bedroom_ac"})},
setFanOff() { return callService("climate", "set_fan_mode", {fan_mode: FAN_MODE.OFF}, {entity_id: "climate.bedroom_ac"})},
setFanAuto() { return callService("climate","set_fan_mode", {fan_mode: FAN_MODE.AUTO}, {entity_id: "climate.bedroom_ac"})},
setFanLow() { return callService("climate", "set_fan_mode", {fan_mode: FAN_MODE.LOW}, {entity_id: "climate.bedroom_ac"})},
setFanMedium() { return callService("climate", "set_fan_mode", {fan_mode: FAN_MODE.MEDIUM}, {entity_id: "climate.bedroom_ac"})},
setFanHigh() { return callService("climate", "set_fan_mode", {fan_mode: FAN_MODE.HIGH}, {entity_id: "climate.bedroom_ac"})},
setFanMiddle() { return callService("climate", "set_fan_mode", {fan_mode: FAN_MODE.MIDDLE}, {entity_id: "climate.bedroom_ac"})},
setFanFocus() { return callService("climate", "set_fan_mode", {fan_mode: FAN_MODE.FOCUS}, {entity_id: "climate.bedroom_ac"})},
setFanDiffuse() { return callService("climate", "set_fan_mode", {fan_mode: FAN_MODE.DIFFUSE}, {entity_id: "climate.bedroom_ac"})},
setSwingOff() { return callService("climate", "set_swing_mode", {switch_mode: SWING_MODE.OFF}, {entity_id: "climate.bedroom_ac"})},
setSwingOn() { return callService("climate", "set_swing_mode", {switch_mode: SWING_MODE.ON}, {entity_id: "climate.bedroom_ac"})},
setSwingVertical() { return callService("climate", "set_swing_mode", {switch_mode: SWING_MODE.VERTICAL}, {entity_id: "climate.bedroom_ac"})},
setSwingHorizontal() { return callService("climate", "set_swing_mode", {switch_mode: SWING_MODE.HORIZONTAL}, {entity_id: "climate.bedroom_ac"})},
setSwingBoth() { return callService("climate", "set_swing_mode", {switch_mode: SWING_MODE.BOTH}, {entity_id: "climate.bedroom_ac"})},
setTargetTemperature(temperature: number) { return callService("climate", "set_temperature", {temperature}, {entity_id: "climate.bedroom_ac"})},
setTargetTemperatureRange(min:number, max:number) { return callService("climate", "set_temperature", {target_temp_high:max, target_temp_low:min}, {entity_id: "climate.bedroom_ac"})},
setFanMode(fan_mode: FAN_MODE) { return callService("climate", "set_fan_mode", {fan_mode}, {entity_id: "climate.bedroom_ac"})},
setPresetMode(preset_mode: PRESET_MODE) { return callService("climate", "set_preset_mode", {preset_mode}, {entity_id: "climate.bedroom_ac"})},
setSwingMode(swing_mode: SWING_MODE) { return callService("climate", "set_swing_mode", {swing_mode}, {entity_id: "climate.bedroom_ac"})},
setAuxHeatOn() { return callService("climate", "set_aux_heat", {aux_heat:true}, {entity_id: "climate.bedroom_ac"})},
setAuxHeatOff() { return callService("climate", "set_aux_heat", {aux_heat:false}, {entity_id: "climate.bedroom_ac"})}
},

['office_ac']: {
  entity_id: "climate.office_ac",
get entity() { return {state: shadowState["climate.office_ac"].state, attributes: shadowState["climate.office_ac"].attributes} as ClimateProperties},
turnOn() { return callService("climate", "set_hvac_mode", {hvac_mode: HVAC_MODE.ON}, {entity_id: "climate.office_ac"})},
turnOff() { return callService("climate", "set_hvac_mode", {hvac_mode: HVAC_MODE.OFF}, {entity_id: "climate.office_ac"})},
setHeating() { return callService("climate", "set_hvac_mode", {hvac_mode: HVAC_MODE.HEAT}, {entity_id: "climate.office_ac"})},
setCooling() { return callService("climate", "set_hvac_mode", {hvac_mode: HVAC_MODE.COOL}, {entity_id: "climate.office_ac"})},
setHeatCool() { return callService("climate", "set_hvac_mode", {hvac_mode: HVAC_MODE.HEAT_COOL}, {entity_id: "climate.office_ac"})},
setAuto () { return callService("climate", "set_hvac_mode", {hvac_mode: HVAC_MODE.AUTO}, {entity_id: "climate.office_ac"})},
setDry () { return callService("climate", "set_hvac_mode", {hvac_mode:  HVAC_MODE.DRY}, {entity_id: "climate.office_ac"})},
setFanOnly() { return callService("climate", "set_hvac_mode", {hvac_mode: HVAC_MODE.FAN_ONLY}, {entity_id: "climate.office_ac"})},
setEco () { return callService("climate", "set_preset_mode", {preset_mode: PRESET_MODE.ECO}, {entity_id: "climate.office_ac"})},
setAway () { return callService("climate", "set_preset_mode", {preset_mode: PRESET_MODE.AWAY}, {entity_id: "climate.office_ac"})},
setBoost () { return callService("climate", "set_preset_mode", {preset_mode: PRESET_MODE.BOOST}, {entity_id: "climate.office_ac"})},
setComfort() { return callService("climate", "set_preset_mode", {preset_mode: PRESET_MODE.COMFORT}, {entity_id: "climate.office_ac"})},
setHome () { return callService("climate", "set_preset_mode", {preset_mode: PRESET_MODE.HOME}, {entity_id: "climate.office_ac"})},
setSleep () { return callService("climate", "set_preset_mode", {preset_mode: PRESET_MODE.SLEEP}, {entity_id: "climate.office_ac"})},
setActivity() { return callService("climate", "set_preset_mode", {preset_mode: PRESET_MODE.ACTIVITY}, {entity_id: "climate.office_ac"})},
setFanOn () { return callService("climate", "set_fan_mode", {fan_mode: FAN_MODE.ON}, {entity_id: "climate.office_ac"})},
setFanOff() { return callService("climate", "set_fan_mode", {fan_mode: FAN_MODE.OFF}, {entity_id: "climate.office_ac"})},
setFanAuto() { return callService("climate","set_fan_mode", {fan_mode: FAN_MODE.AUTO}, {entity_id: "climate.office_ac"})},
setFanLow() { return callService("climate", "set_fan_mode", {fan_mode: FAN_MODE.LOW}, {entity_id: "climate.office_ac"})},
setFanMedium() { return callService("climate", "set_fan_mode", {fan_mode: FAN_MODE.MEDIUM}, {entity_id: "climate.office_ac"})},
setFanHigh() { return callService("climate", "set_fan_mode", {fan_mode: FAN_MODE.HIGH}, {entity_id: "climate.office_ac"})},
setFanMiddle() { return callService("climate", "set_fan_mode", {fan_mode: FAN_MODE.MIDDLE}, {entity_id: "climate.office_ac"})},
setFanFocus() { return callService("climate", "set_fan_mode", {fan_mode: FAN_MODE.FOCUS}, {entity_id: "climate.office_ac"})},
setFanDiffuse() { return callService("climate", "set_fan_mode", {fan_mode: FAN_MODE.DIFFUSE}, {entity_id: "climate.office_ac"})},
setSwingOff() { return callService("climate", "set_swing_mode", {switch_mode: SWING_MODE.OFF}, {entity_id: "climate.office_ac"})},
setSwingOn() { return callService("climate", "set_swing_mode", {switch_mode: SWING_MODE.ON}, {entity_id: "climate.office_ac"})},
setSwingVertical() { return callService("climate", "set_swing_mode", {switch_mode: SWING_MODE.VERTICAL}, {entity_id: "climate.office_ac"})},
setSwingHorizontal() { return callService("climate", "set_swing_mode", {switch_mode: SWING_MODE.HORIZONTAL}, {entity_id: "climate.office_ac"})},
setSwingBoth() { return callService("climate", "set_swing_mode", {switch_mode: SWING_MODE.BOTH}, {entity_id: "climate.office_ac"})},
setTargetTemperature(temperature: number) { return callService("climate", "set_temperature", {temperature}, {entity_id: "climate.office_ac"})},
setTargetTemperatureRange(min:number, max:number) { return callService("climate", "set_temperature", {target_temp_high:max, target_temp_low:min}, {entity_id: "climate.office_ac"})},
setFanMode(fan_mode: FAN_MODE) { return callService("climate", "set_fan_mode", {fan_mode}, {entity_id: "climate.office_ac"})},
setPresetMode(preset_mode: PRESET_MODE) { return callService("climate", "set_preset_mode", {preset_mode}, {entity_id: "climate.office_ac"})},
setSwingMode(swing_mode: SWING_MODE) { return callService("climate", "set_swing_mode", {swing_mode}, {entity_id: "climate.office_ac"})},
setAuxHeatOn() { return callService("climate", "set_aux_heat", {aux_heat:true}, {entity_id: "climate.office_ac"})},
setAuxHeatOff() { return callService("climate", "set_aux_heat", {aux_heat:false}, {entity_id: "climate.office_ac"})}
},

['secondary_room_ac']: {
  entity_id: "climate.secondary_room_ac",
get entity() { return {state: shadowState["climate.secondary_room_ac"].state, attributes: shadowState["climate.secondary_room_ac"].attributes} as ClimateProperties},
turnOn() { return callService("climate", "set_hvac_mode", {hvac_mode: HVAC_MODE.ON}, {entity_id: "climate.secondary_room_ac"})},
turnOff() { return callService("climate", "set_hvac_mode", {hvac_mode: HVAC_MODE.OFF}, {entity_id: "climate.secondary_room_ac"})},
setHeating() { return callService("climate", "set_hvac_mode", {hvac_mode: HVAC_MODE.HEAT}, {entity_id: "climate.secondary_room_ac"})},
setCooling() { return callService("climate", "set_hvac_mode", {hvac_mode: HVAC_MODE.COOL}, {entity_id: "climate.secondary_room_ac"})},
setHeatCool() { return callService("climate", "set_hvac_mode", {hvac_mode: HVAC_MODE.HEAT_COOL}, {entity_id: "climate.secondary_room_ac"})},
setAuto () { return callService("climate", "set_hvac_mode", {hvac_mode: HVAC_MODE.AUTO}, {entity_id: "climate.secondary_room_ac"})},
setDry () { return callService("climate", "set_hvac_mode", {hvac_mode:  HVAC_MODE.DRY}, {entity_id: "climate.secondary_room_ac"})},
setFanOnly() { return callService("climate", "set_hvac_mode", {hvac_mode: HVAC_MODE.FAN_ONLY}, {entity_id: "climate.secondary_room_ac"})},
setEco () { return callService("climate", "set_preset_mode", {preset_mode: PRESET_MODE.ECO}, {entity_id: "climate.secondary_room_ac"})},
setAway () { return callService("climate", "set_preset_mode", {preset_mode: PRESET_MODE.AWAY}, {entity_id: "climate.secondary_room_ac"})},
setBoost () { return callService("climate", "set_preset_mode", {preset_mode: PRESET_MODE.BOOST}, {entity_id: "climate.secondary_room_ac"})},
setComfort() { return callService("climate", "set_preset_mode", {preset_mode: PRESET_MODE.COMFORT}, {entity_id: "climate.secondary_room_ac"})},
setHome () { return callService("climate", "set_preset_mode", {preset_mode: PRESET_MODE.HOME}, {entity_id: "climate.secondary_room_ac"})},
setSleep () { return callService("climate", "set_preset_mode", {preset_mode: PRESET_MODE.SLEEP}, {entity_id: "climate.secondary_room_ac"})},
setActivity() { return callService("climate", "set_preset_mode", {preset_mode: PRESET_MODE.ACTIVITY}, {entity_id: "climate.secondary_room_ac"})},
setFanOn () { return callService("climate", "set_fan_mode", {fan_mode: FAN_MODE.ON}, {entity_id: "climate.secondary_room_ac"})},
setFanOff() { return callService("climate", "set_fan_mode", {fan_mode: FAN_MODE.OFF}, {entity_id: "climate.secondary_room_ac"})},
setFanAuto() { return callService("climate","set_fan_mode", {fan_mode: FAN_MODE.AUTO}, {entity_id: "climate.secondary_room_ac"})},
setFanLow() { return callService("climate", "set_fan_mode", {fan_mode: FAN_MODE.LOW}, {entity_id: "climate.secondary_room_ac"})},
setFanMedium() { return callService("climate", "set_fan_mode", {fan_mode: FAN_MODE.MEDIUM}, {entity_id: "climate.secondary_room_ac"})},
setFanHigh() { return callService("climate", "set_fan_mode", {fan_mode: FAN_MODE.HIGH}, {entity_id: "climate.secondary_room_ac"})},
setFanMiddle() { return callService("climate", "set_fan_mode", {fan_mode: FAN_MODE.MIDDLE}, {entity_id: "climate.secondary_room_ac"})},
setFanFocus() { return callService("climate", "set_fan_mode", {fan_mode: FAN_MODE.FOCUS}, {entity_id: "climate.secondary_room_ac"})},
setFanDiffuse() { return callService("climate", "set_fan_mode", {fan_mode: FAN_MODE.DIFFUSE}, {entity_id: "climate.secondary_room_ac"})},
setSwingOff() { return callService("climate", "set_swing_mode", {switch_mode: SWING_MODE.OFF}, {entity_id: "climate.secondary_room_ac"})},
setSwingOn() { return callService("climate", "set_swing_mode", {switch_mode: SWING_MODE.ON}, {entity_id: "climate.secondary_room_ac"})},
setSwingVertical() { return callService("climate", "set_swing_mode", {switch_mode: SWING_MODE.VERTICAL}, {entity_id: "climate.secondary_room_ac"})},
setSwingHorizontal() { return callService("climate", "set_swing_mode", {switch_mode: SWING_MODE.HORIZONTAL}, {entity_id: "climate.secondary_room_ac"})},
setSwingBoth() { return callService("climate", "set_swing_mode", {switch_mode: SWING_MODE.BOTH}, {entity_id: "climate.secondary_room_ac"})},
setTargetTemperature(temperature: number) { return callService("climate", "set_temperature", {temperature}, {entity_id: "climate.secondary_room_ac"})},
setTargetTemperatureRange(min:number, max:number) { return callService("climate", "set_temperature", {target_temp_high:max, target_temp_low:min}, {entity_id: "climate.secondary_room_ac"})},
setFanMode(fan_mode: FAN_MODE) { return callService("climate", "set_fan_mode", {fan_mode}, {entity_id: "climate.secondary_room_ac"})},
setPresetMode(preset_mode: PRESET_MODE) { return callService("climate", "set_preset_mode", {preset_mode}, {entity_id: "climate.secondary_room_ac"})},
setSwingMode(swing_mode: SWING_MODE) { return callService("climate", "set_swing_mode", {swing_mode}, {entity_id: "climate.secondary_room_ac"})},
setAuxHeatOn() { return callService("climate", "set_aux_heat", {aux_heat:true}, {entity_id: "climate.secondary_room_ac"})},
setAuxHeatOff() { return callService("climate", "set_aux_heat", {aux_heat:false}, {entity_id: "climate.secondary_room_ac"})}
},

['nibe_133481_s1_room']: {
  entity_id: "climate.nibe_133481_s1_room",
get entity() { return {state: shadowState["climate.nibe_133481_s1_room"].state, attributes: shadowState["climate.nibe_133481_s1_room"].attributes} as ClimateProperties},
turnOn() { return callService("climate", "set_hvac_mode", {hvac_mode: HVAC_MODE.ON}, {entity_id: "climate.nibe_133481_s1_room"})},
turnOff() { return callService("climate", "set_hvac_mode", {hvac_mode: HVAC_MODE.OFF}, {entity_id: "climate.nibe_133481_s1_room"})},
setHeating() { return callService("climate", "set_hvac_mode", {hvac_mode: HVAC_MODE.HEAT}, {entity_id: "climate.nibe_133481_s1_room"})},
setCooling() { return callService("climate", "set_hvac_mode", {hvac_mode: HVAC_MODE.COOL}, {entity_id: "climate.nibe_133481_s1_room"})},
setHeatCool() { return callService("climate", "set_hvac_mode", {hvac_mode: HVAC_MODE.HEAT_COOL}, {entity_id: "climate.nibe_133481_s1_room"})},
setAuto () { return callService("climate", "set_hvac_mode", {hvac_mode: HVAC_MODE.AUTO}, {entity_id: "climate.nibe_133481_s1_room"})},
setDry () { return callService("climate", "set_hvac_mode", {hvac_mode:  HVAC_MODE.DRY}, {entity_id: "climate.nibe_133481_s1_room"})},
setFanOnly() { return callService("climate", "set_hvac_mode", {hvac_mode: HVAC_MODE.FAN_ONLY}, {entity_id: "climate.nibe_133481_s1_room"})},
setEco () { return callService("climate", "set_preset_mode", {preset_mode: PRESET_MODE.ECO}, {entity_id: "climate.nibe_133481_s1_room"})},
setAway () { return callService("climate", "set_preset_mode", {preset_mode: PRESET_MODE.AWAY}, {entity_id: "climate.nibe_133481_s1_room"})},
setBoost () { return callService("climate", "set_preset_mode", {preset_mode: PRESET_MODE.BOOST}, {entity_id: "climate.nibe_133481_s1_room"})},
setComfort() { return callService("climate", "set_preset_mode", {preset_mode: PRESET_MODE.COMFORT}, {entity_id: "climate.nibe_133481_s1_room"})},
setHome () { return callService("climate", "set_preset_mode", {preset_mode: PRESET_MODE.HOME}, {entity_id: "climate.nibe_133481_s1_room"})},
setSleep () { return callService("climate", "set_preset_mode", {preset_mode: PRESET_MODE.SLEEP}, {entity_id: "climate.nibe_133481_s1_room"})},
setActivity() { return callService("climate", "set_preset_mode", {preset_mode: PRESET_MODE.ACTIVITY}, {entity_id: "climate.nibe_133481_s1_room"})},
setFanOn () { return callService("climate", "set_fan_mode", {fan_mode: FAN_MODE.ON}, {entity_id: "climate.nibe_133481_s1_room"})},
setFanOff() { return callService("climate", "set_fan_mode", {fan_mode: FAN_MODE.OFF}, {entity_id: "climate.nibe_133481_s1_room"})},
setFanAuto() { return callService("climate","set_fan_mode", {fan_mode: FAN_MODE.AUTO}, {entity_id: "climate.nibe_133481_s1_room"})},
setFanLow() { return callService("climate", "set_fan_mode", {fan_mode: FAN_MODE.LOW}, {entity_id: "climate.nibe_133481_s1_room"})},
setFanMedium() { return callService("climate", "set_fan_mode", {fan_mode: FAN_MODE.MEDIUM}, {entity_id: "climate.nibe_133481_s1_room"})},
setFanHigh() { return callService("climate", "set_fan_mode", {fan_mode: FAN_MODE.HIGH}, {entity_id: "climate.nibe_133481_s1_room"})},
setFanMiddle() { return callService("climate", "set_fan_mode", {fan_mode: FAN_MODE.MIDDLE}, {entity_id: "climate.nibe_133481_s1_room"})},
setFanFocus() { return callService("climate", "set_fan_mode", {fan_mode: FAN_MODE.FOCUS}, {entity_id: "climate.nibe_133481_s1_room"})},
setFanDiffuse() { return callService("climate", "set_fan_mode", {fan_mode: FAN_MODE.DIFFUSE}, {entity_id: "climate.nibe_133481_s1_room"})},
setSwingOff() { return callService("climate", "set_swing_mode", {switch_mode: SWING_MODE.OFF}, {entity_id: "climate.nibe_133481_s1_room"})},
setSwingOn() { return callService("climate", "set_swing_mode", {switch_mode: SWING_MODE.ON}, {entity_id: "climate.nibe_133481_s1_room"})},
setSwingVertical() { return callService("climate", "set_swing_mode", {switch_mode: SWING_MODE.VERTICAL}, {entity_id: "climate.nibe_133481_s1_room"})},
setSwingHorizontal() { return callService("climate", "set_swing_mode", {switch_mode: SWING_MODE.HORIZONTAL}, {entity_id: "climate.nibe_133481_s1_room"})},
setSwingBoth() { return callService("climate", "set_swing_mode", {switch_mode: SWING_MODE.BOTH}, {entity_id: "climate.nibe_133481_s1_room"})},
setTargetTemperature(temperature: number) { return callService("climate", "set_temperature", {temperature}, {entity_id: "climate.nibe_133481_s1_room"})},
setTargetTemperatureRange(min:number, max:number) { return callService("climate", "set_temperature", {target_temp_high:max, target_temp_low:min}, {entity_id: "climate.nibe_133481_s1_room"})},
setFanMode(fan_mode: FAN_MODE) { return callService("climate", "set_fan_mode", {fan_mode}, {entity_id: "climate.nibe_133481_s1_room"})},
setPresetMode(preset_mode: PRESET_MODE) { return callService("climate", "set_preset_mode", {preset_mode}, {entity_id: "climate.nibe_133481_s1_room"})},
setSwingMode(swing_mode: SWING_MODE) { return callService("climate", "set_swing_mode", {swing_mode}, {entity_id: "climate.nibe_133481_s1_room"})},
setAuxHeatOn() { return callService("climate", "set_aux_heat", {aux_heat:true}, {entity_id: "climate.nibe_133481_s1_room"})},
setAuxHeatOff() { return callService("climate", "set_aux_heat", {aux_heat:false}, {entity_id: "climate.nibe_133481_s1_room"})}
},

['nibe_133481_s1_supply']: {
  entity_id: "climate.nibe_133481_s1_supply",
get entity() { return {state: shadowState["climate.nibe_133481_s1_supply"].state, attributes: shadowState["climate.nibe_133481_s1_supply"].attributes} as ClimateProperties},
turnOn() { return callService("climate", "set_hvac_mode", {hvac_mode: HVAC_MODE.ON}, {entity_id: "climate.nibe_133481_s1_supply"})},
turnOff() { return callService("climate", "set_hvac_mode", {hvac_mode: HVAC_MODE.OFF}, {entity_id: "climate.nibe_133481_s1_supply"})},
setHeating() { return callService("climate", "set_hvac_mode", {hvac_mode: HVAC_MODE.HEAT}, {entity_id: "climate.nibe_133481_s1_supply"})},
setCooling() { return callService("climate", "set_hvac_mode", {hvac_mode: HVAC_MODE.COOL}, {entity_id: "climate.nibe_133481_s1_supply"})},
setHeatCool() { return callService("climate", "set_hvac_mode", {hvac_mode: HVAC_MODE.HEAT_COOL}, {entity_id: "climate.nibe_133481_s1_supply"})},
setAuto () { return callService("climate", "set_hvac_mode", {hvac_mode: HVAC_MODE.AUTO}, {entity_id: "climate.nibe_133481_s1_supply"})},
setDry () { return callService("climate", "set_hvac_mode", {hvac_mode:  HVAC_MODE.DRY}, {entity_id: "climate.nibe_133481_s1_supply"})},
setFanOnly() { return callService("climate", "set_hvac_mode", {hvac_mode: HVAC_MODE.FAN_ONLY}, {entity_id: "climate.nibe_133481_s1_supply"})},
setEco () { return callService("climate", "set_preset_mode", {preset_mode: PRESET_MODE.ECO}, {entity_id: "climate.nibe_133481_s1_supply"})},
setAway () { return callService("climate", "set_preset_mode", {preset_mode: PRESET_MODE.AWAY}, {entity_id: "climate.nibe_133481_s1_supply"})},
setBoost () { return callService("climate", "set_preset_mode", {preset_mode: PRESET_MODE.BOOST}, {entity_id: "climate.nibe_133481_s1_supply"})},
setComfort() { return callService("climate", "set_preset_mode", {preset_mode: PRESET_MODE.COMFORT}, {entity_id: "climate.nibe_133481_s1_supply"})},
setHome () { return callService("climate", "set_preset_mode", {preset_mode: PRESET_MODE.HOME}, {entity_id: "climate.nibe_133481_s1_supply"})},
setSleep () { return callService("climate", "set_preset_mode", {preset_mode: PRESET_MODE.SLEEP}, {entity_id: "climate.nibe_133481_s1_supply"})},
setActivity() { return callService("climate", "set_preset_mode", {preset_mode: PRESET_MODE.ACTIVITY}, {entity_id: "climate.nibe_133481_s1_supply"})},
setFanOn () { return callService("climate", "set_fan_mode", {fan_mode: FAN_MODE.ON}, {entity_id: "climate.nibe_133481_s1_supply"})},
setFanOff() { return callService("climate", "set_fan_mode", {fan_mode: FAN_MODE.OFF}, {entity_id: "climate.nibe_133481_s1_supply"})},
setFanAuto() { return callService("climate","set_fan_mode", {fan_mode: FAN_MODE.AUTO}, {entity_id: "climate.nibe_133481_s1_supply"})},
setFanLow() { return callService("climate", "set_fan_mode", {fan_mode: FAN_MODE.LOW}, {entity_id: "climate.nibe_133481_s1_supply"})},
setFanMedium() { return callService("climate", "set_fan_mode", {fan_mode: FAN_MODE.MEDIUM}, {entity_id: "climate.nibe_133481_s1_supply"})},
setFanHigh() { return callService("climate", "set_fan_mode", {fan_mode: FAN_MODE.HIGH}, {entity_id: "climate.nibe_133481_s1_supply"})},
setFanMiddle() { return callService("climate", "set_fan_mode", {fan_mode: FAN_MODE.MIDDLE}, {entity_id: "climate.nibe_133481_s1_supply"})},
setFanFocus() { return callService("climate", "set_fan_mode", {fan_mode: FAN_MODE.FOCUS}, {entity_id: "climate.nibe_133481_s1_supply"})},
setFanDiffuse() { return callService("climate", "set_fan_mode", {fan_mode: FAN_MODE.DIFFUSE}, {entity_id: "climate.nibe_133481_s1_supply"})},
setSwingOff() { return callService("climate", "set_swing_mode", {switch_mode: SWING_MODE.OFF}, {entity_id: "climate.nibe_133481_s1_supply"})},
setSwingOn() { return callService("climate", "set_swing_mode", {switch_mode: SWING_MODE.ON}, {entity_id: "climate.nibe_133481_s1_supply"})},
setSwingVertical() { return callService("climate", "set_swing_mode", {switch_mode: SWING_MODE.VERTICAL}, {entity_id: "climate.nibe_133481_s1_supply"})},
setSwingHorizontal() { return callService("climate", "set_swing_mode", {switch_mode: SWING_MODE.HORIZONTAL}, {entity_id: "climate.nibe_133481_s1_supply"})},
setSwingBoth() { return callService("climate", "set_swing_mode", {switch_mode: SWING_MODE.BOTH}, {entity_id: "climate.nibe_133481_s1_supply"})},
setTargetTemperature(temperature: number) { return callService("climate", "set_temperature", {temperature}, {entity_id: "climate.nibe_133481_s1_supply"})},
setTargetTemperatureRange(min:number, max:number) { return callService("climate", "set_temperature", {target_temp_high:max, target_temp_low:min}, {entity_id: "climate.nibe_133481_s1_supply"})},
setFanMode(fan_mode: FAN_MODE) { return callService("climate", "set_fan_mode", {fan_mode}, {entity_id: "climate.nibe_133481_s1_supply"})},
setPresetMode(preset_mode: PRESET_MODE) { return callService("climate", "set_preset_mode", {preset_mode}, {entity_id: "climate.nibe_133481_s1_supply"})},
setSwingMode(swing_mode: SWING_MODE) { return callService("climate", "set_swing_mode", {swing_mode}, {entity_id: "climate.nibe_133481_s1_supply"})},
setAuxHeatOn() { return callService("climate", "set_aux_heat", {aux_heat:true}, {entity_id: "climate.nibe_133481_s1_supply"})},
setAuxHeatOff() { return callService("climate", "set_aux_heat", {aux_heat:false}, {entity_id: "climate.nibe_133481_s1_supply"})}
},

['storeroom_ac']: {
  entity_id: "climate.storeroom_ac",
get entity() { return {state: shadowState["climate.storeroom_ac"].state, attributes: shadowState["climate.storeroom_ac"].attributes} as ClimateProperties},
turnOn() { return callService("climate", "set_hvac_mode", {hvac_mode: HVAC_MODE.ON}, {entity_id: "climate.storeroom_ac"})},
turnOff() { return callService("climate", "set_hvac_mode", {hvac_mode: HVAC_MODE.OFF}, {entity_id: "climate.storeroom_ac"})},
setHeating() { return callService("climate", "set_hvac_mode", {hvac_mode: HVAC_MODE.HEAT}, {entity_id: "climate.storeroom_ac"})},
setCooling() { return callService("climate", "set_hvac_mode", {hvac_mode: HVAC_MODE.COOL}, {entity_id: "climate.storeroom_ac"})},
setHeatCool() { return callService("climate", "set_hvac_mode", {hvac_mode: HVAC_MODE.HEAT_COOL}, {entity_id: "climate.storeroom_ac"})},
setAuto () { return callService("climate", "set_hvac_mode", {hvac_mode: HVAC_MODE.AUTO}, {entity_id: "climate.storeroom_ac"})},
setDry () { return callService("climate", "set_hvac_mode", {hvac_mode:  HVAC_MODE.DRY}, {entity_id: "climate.storeroom_ac"})},
setFanOnly() { return callService("climate", "set_hvac_mode", {hvac_mode: HVAC_MODE.FAN_ONLY}, {entity_id: "climate.storeroom_ac"})},
setEco () { return callService("climate", "set_preset_mode", {preset_mode: PRESET_MODE.ECO}, {entity_id: "climate.storeroom_ac"})},
setAway () { return callService("climate", "set_preset_mode", {preset_mode: PRESET_MODE.AWAY}, {entity_id: "climate.storeroom_ac"})},
setBoost () { return callService("climate", "set_preset_mode", {preset_mode: PRESET_MODE.BOOST}, {entity_id: "climate.storeroom_ac"})},
setComfort() { return callService("climate", "set_preset_mode", {preset_mode: PRESET_MODE.COMFORT}, {entity_id: "climate.storeroom_ac"})},
setHome () { return callService("climate", "set_preset_mode", {preset_mode: PRESET_MODE.HOME}, {entity_id: "climate.storeroom_ac"})},
setSleep () { return callService("climate", "set_preset_mode", {preset_mode: PRESET_MODE.SLEEP}, {entity_id: "climate.storeroom_ac"})},
setActivity() { return callService("climate", "set_preset_mode", {preset_mode: PRESET_MODE.ACTIVITY}, {entity_id: "climate.storeroom_ac"})},
setFanOn () { return callService("climate", "set_fan_mode", {fan_mode: FAN_MODE.ON}, {entity_id: "climate.storeroom_ac"})},
setFanOff() { return callService("climate", "set_fan_mode", {fan_mode: FAN_MODE.OFF}, {entity_id: "climate.storeroom_ac"})},
setFanAuto() { return callService("climate","set_fan_mode", {fan_mode: FAN_MODE.AUTO}, {entity_id: "climate.storeroom_ac"})},
setFanLow() { return callService("climate", "set_fan_mode", {fan_mode: FAN_MODE.LOW}, {entity_id: "climate.storeroom_ac"})},
setFanMedium() { return callService("climate", "set_fan_mode", {fan_mode: FAN_MODE.MEDIUM}, {entity_id: "climate.storeroom_ac"})},
setFanHigh() { return callService("climate", "set_fan_mode", {fan_mode: FAN_MODE.HIGH}, {entity_id: "climate.storeroom_ac"})},
setFanMiddle() { return callService("climate", "set_fan_mode", {fan_mode: FAN_MODE.MIDDLE}, {entity_id: "climate.storeroom_ac"})},
setFanFocus() { return callService("climate", "set_fan_mode", {fan_mode: FAN_MODE.FOCUS}, {entity_id: "climate.storeroom_ac"})},
setFanDiffuse() { return callService("climate", "set_fan_mode", {fan_mode: FAN_MODE.DIFFUSE}, {entity_id: "climate.storeroom_ac"})},
setSwingOff() { return callService("climate", "set_swing_mode", {switch_mode: SWING_MODE.OFF}, {entity_id: "climate.storeroom_ac"})},
setSwingOn() { return callService("climate", "set_swing_mode", {switch_mode: SWING_MODE.ON}, {entity_id: "climate.storeroom_ac"})},
setSwingVertical() { return callService("climate", "set_swing_mode", {switch_mode: SWING_MODE.VERTICAL}, {entity_id: "climate.storeroom_ac"})},
setSwingHorizontal() { return callService("climate", "set_swing_mode", {switch_mode: SWING_MODE.HORIZONTAL}, {entity_id: "climate.storeroom_ac"})},
setSwingBoth() { return callService("climate", "set_swing_mode", {switch_mode: SWING_MODE.BOTH}, {entity_id: "climate.storeroom_ac"})},
setTargetTemperature(temperature: number) { return callService("climate", "set_temperature", {temperature}, {entity_id: "climate.storeroom_ac"})},
setTargetTemperatureRange(min:number, max:number) { return callService("climate", "set_temperature", {target_temp_high:max, target_temp_low:min}, {entity_id: "climate.storeroom_ac"})},
setFanMode(fan_mode: FAN_MODE) { return callService("climate", "set_fan_mode", {fan_mode}, {entity_id: "climate.storeroom_ac"})},
setPresetMode(preset_mode: PRESET_MODE) { return callService("climate", "set_preset_mode", {preset_mode}, {entity_id: "climate.storeroom_ac"})},
setSwingMode(swing_mode: SWING_MODE) { return callService("climate", "set_swing_mode", {swing_mode}, {entity_id: "climate.storeroom_ac"})},
setAuxHeatOn() { return callService("climate", "set_aux_heat", {aux_heat:true}, {entity_id: "climate.storeroom_ac"})},
setAuxHeatOff() { return callService("climate", "set_aux_heat", {aux_heat:false}, {entity_id: "climate.storeroom_ac"})}
},

}
